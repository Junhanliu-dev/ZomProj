// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZomAPIs.Model.Data;

namespace ZomAPIs.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20191219001547_addConversionToUser")]
    partial class addConversionToUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ZomAPIs.Model.MySql.RestaurantInfo", b =>
                {
                    b.Property<int>("ResInfoId")
                        .HasColumnType("int");

                    b.Property<long>("RestaurantHashId")
                        .HasColumnType("bigint");

                    b.Property<string>("RestaurantMongoId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ResInfoId");

                    b.ToTable("RestaurantInfos");
                });

            modelBuilder.Entity("ZomAPIs.Model.MySql.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ScreenName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ZomAPIs.Model.MySql.UserRestaurant", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ResInfoId")
                        .HasColumnType("int");

                    b.Property<int>("BeenThereCount")
                        .HasColumnType("int");

                    b.Property<bool>("Liked")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("RestaurantInfoResInfoId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ResInfoId");

                    b.HasIndex("RestaurantInfoResInfoId");

                    b.ToTable("UserRestaurants");
                });

            modelBuilder.Entity("ZomAPIs.Model.MySql.UserRestaurant", b =>
                {
                    b.HasOne("ZomAPIs.Model.MySql.RestaurantInfo", "RestaurantInfo")
                        .WithMany("UserRestaurants")
                        .HasForeignKey("RestaurantInfoResInfoId");

                    b.HasOne("ZomAPIs.Model.MySql.User", "User")
                        .WithMany("UserRestaurants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
